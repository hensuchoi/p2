Nonterminals useless in grammar

   Var_Ident
   Pri_Expr
   Post_Expr
   Unary_Expr
   Unary_Op
   Mul_Expr
   Add_Expr
   Rel_Expr
   Equal_Expr
   Logical_And_Expr
   Logical_Or_Expr
   Assign_Expr
   Assign_Op
   Expr
   Stmt
   Simple_Stmt
   Comp_Stmt
   Stmt_List
   Expr_Stmt
   Select_Stmt
   Select_Rest_Stmt
   Cond
   Switch_Stmt
   Case_Label
   Default_Label
   Switch_Stmt_List
   Case_Stmt
   Default_Stmt
   Case_Stmt_List
   Switch_Stmt_Body
   Iterate_Stmt
   For_Init_Stmt
   For_Rest_Stmt
   Trans_Unit
   Ext_Decl
   Fn_Def


Terminals unused in grammar

   T_LessEqual
   T_GreaterEqual
   T_EqualOp
   T_NotEqual
   T_Dims
   T_And
   T_Or
   T_Inc
   T_Dec
   T_Plus
   T_Dash
   T_Star
   T_Slash
   T_AddAssign
   T_SubAssign
   T_MulAssign
   T_DivAssign
   T_Equal
   T_LeftAngle
   T_RightAngle
   T_While
   T_For
   T_If
   T_Else
   T_Return
   T_Break
   T_Switch
   T_Case
   T_Default
   T_Do
   T_Continue
   T_LeftParen
   T
   _RightParen
   T_Colon
   T_Semicolon
   T_LeftBrace
   T_RightBrace
   T_Dot
   T_LeftBracket
   T_RightBracket
   T_IntConstant
   T_FloatConstant
   T_BoolConstant
   T_FieldSelection
   '.'
   '+'
   '-'
   '*'
   '/'
   '<'
   '>'
   '='
   '{'
   '}'
   ':'


Rules useless in grammar

   28 Var_Ident: T_Identifier

   29 Pri_Expr: Var_Ident
   30         | T_IntConstant
   31         | T_BoolConstant
   32         | T_FloatConstant
   33         | '(' Expr ')'

   34 Post_Expr: Pri_Expr
   35          | Post_Expr '.' T_FieldSelection
   36          | Post_Expr T_Inc
   37          | Post_Expr T_Dec

   38 Unary_Expr: Post_Expr
   39           | T_Dec Unary_Expr
   40           | T_Inc Unary_Expr
   41           | Unary_Op Unary_Expr

   42 Unary_Op: '+'
   43         | '-'

   44 Mul_Expr: Unary_Expr
   45         | Mul_Expr '*' Unary_Expr
   46         | Mul_Expr '/' Unary_Expr

   47 Add_Expr: Mul_Expr
   48         | Add_Expr '+' Mul_Expr
   49         | Add_Expr '-' Mul_Expr

   50 Rel_Expr: Add_Expr
   51         | Rel_Expr '<' Add_Expr
   52         | Rel_Expr '>' Add_Expr
   53         | Rel_Expr T_LessEqual Add_Expr
   54         | Rel_Expr T_GreaterEqual Add_Expr

   55 Equal_Expr: Rel_Expr
   56           | Equal_Expr T_Equal Rel_Expr
   57           | Equal_Expr T_NotEqual Rel_Expr

   58 Logical_And_Expr: Equal_Expr
   59                 | Logical_And_Expr T_And Equal_Expr

   60 Logical_Or_Expr: Logical_And_Expr
   61                | Logical_Or_Expr T_Or Logical_And_Expr

   62 Assign_Expr: Logical_Or_Expr
   63            | Unary_Expr Assign_Op Assign_Expr

   64 Assign_Op: '='
   65          | T_MulAssign
   66          | T_DivAssign
   67          | T_AddAssign
   68          | T_SubAssign

   69 Expr: Assign_Expr

   70 Stmt: Comp_Stmt
   71     | Simple_Stmt

   72 Simple_Stmt: Expr_Stmt
   73            | Select_Stmt
   74            | Switch_Stmt
   75            | Iterate_Stmt

   76 Comp_Stmt: '{' '}'
   77          | '{' Stmt_List '}'

   78 Stmt_List: Stmt
   79          | Var_Decl
   80          | Stmt_List Stmt
   81          | Stmt_List Var_Decl

   82 Expr_Stmt: ';'
   83          | Expr ';'

   84 Select_Stmt: T_If '(' Expr ')' Select_Rest_Stmt

   85 Select_Rest_Stmt: Stmt T_Else Stmt
   86                 | Stmt

   87 Cond: Expr
   88     | Type_Spec T_Identifier T_Equal Assign_Expr

   89 Switch_Stmt: T_Switch '(' Expr ')' '{' Switch_Stmt_Body '}'

   90 Case_Label: T_Case T_IntConstant ':'

   91 Default_Label: T_Default ':'

   92 Switch_Stmt_List: Stmt_List

   93 Case_Stmt: Case_Label Switch_Stmt_List
   94          | Case_Label '{' Switch_Stmt_List '}'

   95 Default_Stmt: Default_Label Switch_Stmt_List
   96             | Default_Label '{' Switch_Stmt_List '}'

   97 Case_Stmt_List: Case_Stmt
   98               | Case_Stmt_List Case_Stmt

   99 Switch_Stmt_Body: Case_Stmt_List
  100                 | Case_Stmt_List Default_Stmt

  101 Iterate_Stmt: T_While '(' Cond ')' Stmt
  102             | T_For '(' For_Init_Stmt For_Rest_Stmt ')' Stmt

  103 For_Init_Stmt: Expr_Stmt

  104 For_Rest_Stmt: Cond ';'
  105              | Cond ';' Expr

  106 Trans_Unit: Trans_Unit Ext_Decl
  107           | Ext_Decl

  108 Ext_Decl: Fn_Def
  109         | Decl

  110 Fn_Def: Fn_Prototype Comp_Stmt


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList Decl
    3         | Decl

    4 Decl: Fn_Prototype ';'
    5     | Var_Decl

    6 Var_Decl: Single_Decl ';'

    7 Fn_Prototype: Fn_Decl ')'

    8 Fn_Decl: Fn_Hdr
    9        | Fn_Hdr_Param

   10 Fn_Hdr: Type_Spec T_Identifier '('

   11 Fn_Hdr_Param: Fn_Hdr Param_Decln
   12             | Fn_Hdr_Param ',' Param_Decln

   13 Param_Declr: Type_Spec T_Identifier

   14 Param_Decln: Param_Declr
   15            | Type_Spec

   16 Single_Decl: Type_Spec T_Identifier

   17 Type_Spec: T_Void
   18          | T_Float
   19          | T_Int
   20          | T_Bool
   21          | T_Vec2
   22          | T_Vec3
   23          | T_Vec4
   24          | T_Mat2
   25          | T_Mat3
   26          | T_Mat4

   27 Decl: T_Void


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10
')' (41) 7
'*' (42)
'+' (43)
',' (44) 12
'-' (45)
'.' (46)
'/' (47)
':' (58)
';' (59) 4 6
'<' (60)
'=' (61)
'>' (62)
'{' (123)
'}' (125)
error (256)
T_Void (258) 17 27
T_Bool (259) 20
T_Int (260) 19
T_Float (261) 18
T_LessEqual (262)
T_GreaterEqual (263)
T_EqualOp (264)
T_NotEqual (265)
T_Dims (266)
T_And (267)
T_Or (268)
T_Inc (269)
T_Dec (270)
T_Plus (271)
T_Dash (272)
T_Star (273)
T_Slash (274)
T_AddAssign (275)
T_SubAssign (276)
T_MulAssign (277)
T_DivAssign (278)
T_Equal (279)
T_LeftAngle (280)
T_RightAngle (281)
T_While (282)
T_For (283)
T_If (284)
T_Else (285)
T_Return (286)
T_Break (287)
T_Vec2 (288) 21
T_Vec3 (289) 22
T_Vec4 (290) 23
T_Switch (291)
T_Case (292)
T_Default (293)
T_Do (294)
T_Continue (295)
T_Mat2 (296) 24
T_Mat3 (297) 25
T_Mat4 (298) 26
T_LeftParen (299)
T (300)
_RightParen (301)
T_Colon (302)
T_Semicolon (303)
T_LeftBrace (304)
T_RightBrace (305)
T_Dot (306)
T_LeftBracket (307)
T_RightBracket (308)
T_Identifier (309) 10 13 16
T_IntConstant (310)
T_FloatConstant (311)
T_BoolConstant (312)
T_FieldSelection (313)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
Program (75)
    on left: 1, on right: 0
DeclList (76)
    on left: 2 3, on right: 1 2
Decl (77)
    on left: 4 5 27, on right: 2 3
Var_Decl (78)
    on left: 6, on right: 5
Fn_Prototype (79)
    on left: 7, on right: 4
Fn_Decl (80)
    on left: 8 9, on right: 7
Fn_Hdr (81)
    on left: 10, on right: 8 11
Fn_Hdr_Param (82)
    on left: 11 12, on right: 9 12
Param_Declr (83)
    on left: 13, on right: 14
Param_Decln (84)
    on left: 14 15, on right: 11 12
Single_Decl (85)
    on left: 16, on right: 6
Type_Spec (86)
    on left: 17 18 19 20 21 22 23 24 25 26, on right: 10 13 15 16


state 0

    0 $accept: . Program $end

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    Program       go to state 11
    DeclList      go to state 12
    Decl          go to state 13
    Var_Decl      go to state 14
    Fn_Prototype  go to state 15
    Fn_Decl       go to state 16
    Fn_Hdr        go to state 17
    Fn_Hdr_Param  go to state 18
    Single_Decl   go to state 19
    Type_Spec     go to state 20


state 1

   17 Type_Spec: T_Void .
   27 Decl: T_Void .

    T_Identifier  reduce using rule 17 (Type_Spec)
    $default      reduce using rule 27 (Decl)


state 2

   20 Type_Spec: T_Bool .

    $default  reduce using rule 20 (Type_Spec)


state 3

   19 Type_Spec: T_Int .

    $default  reduce using rule 19 (Type_Spec)


state 4

   18 Type_Spec: T_Float .

    $default  reduce using rule 18 (Type_Spec)


state 5

   21 Type_Spec: T_Vec2 .

    $default  reduce using rule 21 (Type_Spec)


state 6

   22 Type_Spec: T_Vec3 .

    $default  reduce using rule 22 (Type_Spec)


state 7

   23 Type_Spec: T_Vec4 .

    $default  reduce using rule 23 (Type_Spec)


state 8

   24 Type_Spec: T_Mat2 .

    $default  reduce using rule 24 (Type_Spec)


state 9

   25 Type_Spec: T_Mat3 .

    $default  reduce using rule 25 (Type_Spec)


state 10

   26 Type_Spec: T_Mat4 .

    $default  reduce using rule 26 (Type_Spec)


state 11

    0 $accept: Program . $end

    $end  shift, and go to state 21


state 12

    1 Program: DeclList .
    2 DeclList: DeclList . Decl

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    $default  reduce using rule 1 (Program)

    Decl          go to state 22
    Var_Decl      go to state 14
    Fn_Prototype  go to state 15
    Fn_Decl       go to state 16
    Fn_Hdr        go to state 17
    Fn_Hdr_Param  go to state 18
    Single_Decl   go to state 19
    Type_Spec     go to state 20


state 13

    3 DeclList: Decl .

    $default  reduce using rule 3 (DeclList)


state 14

    5 Decl: Var_Decl .

    $default  reduce using rule 5 (Decl)


state 15

    4 Decl: Fn_Prototype . ';'

    ';'  shift, and go to state 23


state 16

    7 Fn_Prototype: Fn_Decl . ')'

    ')'  shift, and go to state 24


state 17

    8 Fn_Decl: Fn_Hdr .
   11 Fn_Hdr_Param: Fn_Hdr . Param_Decln

    T_Void   shift, and go to state 25
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    $default  reduce using rule 8 (Fn_Decl)

    Param_Declr  go to state 26
    Param_Decln  go to state 27
    Type_Spec    go to state 28


state 18

    9 Fn_Decl: Fn_Hdr_Param .
   12 Fn_Hdr_Param: Fn_Hdr_Param . ',' Param_Decln

    ','  shift, and go to state 29

    $default  reduce using rule 9 (Fn_Decl)


state 19

    6 Var_Decl: Single_Decl . ';'

    ';'  shift, and go to state 30


state 20

   10 Fn_Hdr: Type_Spec . T_Identifier '('
   16 Single_Decl: Type_Spec . T_Identifier

    T_Identifier  shift, and go to state 31


state 21

    0 $accept: Program $end .

    $default  accept


state 22

    2 DeclList: DeclList Decl .

    $default  reduce using rule 2 (DeclList)


state 23

    4 Decl: Fn_Prototype ';' .

    $default  reduce using rule 4 (Decl)


state 24

    7 Fn_Prototype: Fn_Decl ')' .

    $default  reduce using rule 7 (Fn_Prototype)


state 25

   17 Type_Spec: T_Void .

    $default  reduce using rule 17 (Type_Spec)


state 26

   14 Param_Decln: Param_Declr .

    $default  reduce using rule 14 (Param_Decln)


state 27

   11 Fn_Hdr_Param: Fn_Hdr Param_Decln .

    $default  reduce using rule 11 (Fn_Hdr_Param)


state 28

   13 Param_Declr: Type_Spec . T_Identifier
   15 Param_Decln: Type_Spec .

    T_Identifier  shift, and go to state 32

    $default  reduce using rule 15 (Param_Decln)


state 29

   12 Fn_Hdr_Param: Fn_Hdr_Param ',' . Param_Decln

    T_Void   shift, and go to state 25
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    Param_Declr  go to state 26
    Param_Decln  go to state 33
    Type_Spec    go to state 28


state 30

    6 Var_Decl: Single_Decl ';' .

    $default  reduce using rule 6 (Var_Decl)


state 31

   10 Fn_Hdr: Type_Spec T_Identifier . '('
   16 Single_Decl: Type_Spec T_Identifier .

    '('  shift, and go to state 34

    $default  reduce using rule 16 (Single_Decl)


state 32

   13 Param_Declr: Type_Spec T_Identifier .

    $default  reduce using rule 13 (Param_Declr)


state 33

   12 Fn_Hdr_Param: Fn_Hdr_Param ',' Param_Decln .

    $default  reduce using rule 12 (Fn_Hdr_Param)


state 34

   10 Fn_Hdr: Type_Spec T_Identifier '(' .

    $default  reduce using rule 10 (Fn_Hdr)
